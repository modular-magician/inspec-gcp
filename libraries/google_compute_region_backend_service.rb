# frozen_string_literal: false

# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in README.md and
#     CONTRIBUTING.md located at the root of this package.
#
# ----------------------------------------------------------------------------
require 'gcp_backend'
require 'google/compute/property/regionbackendservice_backends'
require 'google/compute/property/regionbackendservice_connection_draining'

# A provider to manage Compute Engine resources.
class ComputeRegionBackendService < GcpResourceBase
  name 'google_compute_region_backend_service'
  desc 'RegionBackendService'
  supports platform: 'gcp'

  attr_reader :params
  attr_reader :backends
  attr_reader :connection_draining
  attr_reader :creation_timestamp
  attr_reader :description
  attr_reader :fingerprint
  attr_reader :health_checks
  attr_reader :id
  attr_reader :load_balancing_scheme
  attr_reader :name
  attr_reader :protocol
  attr_reader :session_affinity
  attr_reader :timeout_sec
  attr_reader :region

  def initialize(params)
    super(params.merge({ use_http_transport: true }))
    @params = params
    @fetched = @connection.fetch(product_url(params[:beta]), resource_base_url, params, 'Get')
    parse unless @fetched.nil?
  end

  def parse
    @backends = GoogleInSpec::Compute::Property::RegionBackendServiceBackendsArray.parse(@fetched['backends'], to_s)
    @connection_draining = GoogleInSpec::Compute::Property::RegionBackendServiceConnectionDraining.new(@fetched['connectionDraining'], to_s)
    @creation_timestamp = parse_time_string(@fetched['creationTimestamp'])
    @description = @fetched['description']
    @fingerprint = @fetched['fingerprint']
    @health_checks = @fetched['healthChecks']
    @id = @fetched['id']
    @load_balancing_scheme = @fetched['loadBalancingScheme']
    @name = @fetched['name']
    @protocol = @fetched['protocol']
    @session_affinity = @fetched['sessionAffinity']
    @timeout_sec = @fetched['timeoutSec']
    @region = @fetched['region']
  end

  # Handles parsing RFC3339 time string
  def parse_time_string(time_string)
    time_string ? Time.parse(time_string) : nil
  end

  def exists?
    !@fetched.nil?
  end

  def to_s
    "RegionBackendService #{@params[:name]}"
  end

  private

  def product_url(_ = nil)
    'https://www.googleapis.com/compute/v1/'
  end

  def resource_base_url
    'projects/{{project}}/regions/{{region}}/backendServices/{{name}}'
  end
end
